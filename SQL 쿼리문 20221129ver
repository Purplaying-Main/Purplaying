--VER - 2022.11.30 17:00 수정
--tb_abc순 정렬
--tb_account, tb_deliverycharge는 현 단계에서 참조하는 테이블이 없습니다.
--- 이하 쿼리문이므로 그대로 복사하셔서 생성하시면 됩니다.

------------------------- product 테이블 -------------------------
DROP TABLE if exists tb_product;
CREATE TABLE tb_product (
    prdt_id serial4 NOT NULL,
    prdt_name varchar(30),
    prdt_desc varchar(2000),
    prdt_desc_detail text,
    prdt_regdate timestamp DEFAULT now(),
    prdt_opendate date,
    prdt_enddate date,
    prdt_goal numeric,
    prdt_currenttotal numeric,
    prdt_open bool,
    prdt_desc_policy text,
    writer varchar(100),
    prdt_genre int4,
    prdt_thumbnail text,
    prdt_img text,
    prdt_dday numeric,
    prdt_percent numeric,
    prdt_purchaseday date,
    prdt_limitday date,
    prdt_buyercnt int default 0,
    user_id varchar(100),
    img_no int4,
    update_regdate timestamp NOT NULL DEFAULT now(),
    CONSTRAINT tb_product_pkey PRIMARY KEY (prdt_id)
);

------------------------- user 테이블 -------------------------
DROP TABLE if exists tb_user;
CREATE TABLE tb_user (
    user_no serial4 NOT NULL,
    user_id varchar(100) NOT NULL,
    user_pwd varchar(100) NOT NULL,
    user_name varchar(100) NOT NULL,
    user_phone varchar(100) NOT NULL DEFAULT '010-0000-0000'::character varying,
    user_regdate timestamp NULL DEFAULT now(),
    user_activate int4 NOT NULL DEFAULT 1,
    user_role int4 NOT NULL DEFAULT 0,
    user_profile varchar(300) default '/purplaying/file/profile/display?file_name=/2022%5C12%5C02%2Fac892600-b007-46ce-bdac-5ec0ff7b1e3d_%EA%B8%B0%EB%B3%B8%EC%9D%B4%EB%AF%B8%EC%A7%80.jfif',
    user_point int default 0,
    user_nickname	varchar(100) not null,
    CONSTRAINT constraintname UNIQUE (user_id),
    CONSTRAINT tb_user_pkey PRIMARY KEY (user_no)
);
select * from TB_REWARD TR  

------------------------- account 테이블 -------------------------
DROP TABLE if exists tb_account;
CREATE TABLE tb_account (
    account_no serial4 NOT NULL,
    account_type int4 NOT NULL DEFAULT 1,
    account_bank varchar(100) NOT NULL,
    account_bank_no numeric NOT NULL,
    account_bank_nm varchar(100) NOT NULL,
    user_no int4 NOT NULL,
    CONSTRAINT tb_account_pkey PRIMARY KEY (account_no)
);

------------------------- address 테이블 -------------------------
DROP TABLE if exists tb_address;
CREATE TABLE tb_address (
    address_id serial4 NOT NULL,
    address_name varchar(100) NULL,
    address varchar(100) NOT NULL,
    address_detail varchar(100) NOT NULL,
    receiver_name varchar(100) NOT NULL,
    receiver_phonenum varchar(100) NOT NULL,
    default_address bool NULL,
    user_no int4 NOT NULL,
    address_num bpchar(5) NOT NULL,
    CONSTRAINT tb_address_pkey PRIMARY KEY (address_id)
);

------------------------- agreement 테이블 -------------------------
DROP TABLE if exists tb_agreement;
CREATE TABLE tb_agreement (
    agree_no serial4 NOT NULL,
    agree_age bool NOT NULL DEFAULT false,
    agree_terms bool NOT NULL DEFAULT false,
    agree_inform bool NOT NULL DEFAULT false,
    agree_inform_third bool NOT NULL DEFAULT false,
    agree_marketing bool NOT NULL DEFAULT false,
    user_no int4 NOT NULL,
    CONSTRAINT tb_agreement_pkey PRIMARY KEY (agree_no)
);

--------------------------- chat_service 테이블 -------------------------
DROP TABLE IF EXISTS tb_chat_service;
CREATE TABLE IF NOT EXISTS tb_chat_service(
    chat_no serial PRIMARY KEY,
    prdt_id int not null,
    chat_writer varchar(30) not null,
    chat_context varchar(3000),
    chat_date date default now(),
    user_no int not null,
    FOREIGN KEY(user_no) REFERENCES tb_user(user_no) ON DELETE cascade,
    FOREIGN KEY(prdt_id) REFERENCES tb_product(prdt_id) ON DELETE cascade
    );

------------------------- deliverycharge 테이블 -------------------------
DROP TABLE if exists tb_deliverycharge;
CREATE TABLE tb_deliverycharge (
    location_no serial4 NOT NULL,
    location_nm varchar(100) NOT NULL,
    location_price int4 NOT NULL,
    CONSTRAINT tb_deliverycharge_pkey PRIMARY KEY (location_no)
);

------------------------- file 테이블 -------------------------
DROP TABLE if exists tb_file;
CREATE TABLE tb_file (
    file_id serial4 NOT NULL,
    file_name varchar(200) NOT NULL,
    file_location text NULL,
    file_size numeric NULL,
    file_regdate timestamp NOT NULL DEFAULT now(),
    file_state varchar(1) NOT NULL DEFAULT 'F'::character varying,
    prdt_id int4,
    user_no int4,
    CONSTRAINT tb_file_pkey PRIMARY KEY (file_id)
);

------------------------- image 테이블 -------------------------
DROP TABLE if exists tb_image;
CREATE TABLE tb_image (
    img_no numeric NOT NULL,
    img_type bpchar(1) NOT NULL,
    img_path varchar(200) NOT NULL,
    img_nm varchar(200) NOT NULL,
    CONSTRAINT tb_image_pkey PRIMARY KEY (img_no)
);

------------------------- inquiry 테이블 -------------------------
DROP TABLE if exists tb_inquiry;
CREATE TABLE tb_inquiry (
    inquiry_no serial4 NOT NULL,
    inquiry_state int4 NOT NULL DEFAULT 0,
    writer varchar(100) NOT NULL,
    inquiry_title varchar(30) NOT NULL,
    inquiry_context text NULL,
    inquiry_private bool NOT NULL DEFAULT false,
    inquiry_regdate date NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT tb_inquiry_pkey PRIMARY KEY (inquiry_no)
);

------------------------- inquiry_ans 테이블 -------------------------
DROP TABLE if exists tb_inquiry_ans;
CREATE TABLE tb_inquiry_ans (
    ans_no serial4 NOT NULL,
    ans_state int4 NOT NULL,
    admin_id varchar(100) NOT NULL,
    ans_context text NULL,
    ans_regdate date NULL DEFAULT CURRENT_TIMESTAMP,
    inquiry_no int4 NOT NULL,
    CONSTRAINT tb_inquiry_ans_pkey PRIMARY KEY (ans_no)
);

------------------------- leave 테이블 -------------------------
DROP TABLE if exists tb_leave;
CREATE TABLE tb_leave (
    leave_no serial NOT NULL,
    leave_category int4 NOT NULL,
    leave_reason text NULL,
    user_no int4 NOT NULL,
    CONSTRAINT tb_leave_pkey PRIMARY KEY (leave_no)
);

------------------------- mypage 테이블 -------------------------
DROP TABLE if exists tb_mypage;
CREATE TABLE tb_mypage (
    user_no int4 NOT NULL,
    prdt_id int4 NOT NULL,
    product_like bool NULL DEFAULT false,
    CONSTRAINT tb_mypage_pkey PRIMARY KEY (user_no)
);

select * from  TB_SETTING TS 

------------------------- notice 테이블 -------------------------
DROP TABLE if exists tb_notice;
CREATE TABLE tb_notice (
    notice_id serial4 NOT NULL,
    writer varchar(100) NOT NULL,
    notice_title varchar(200) NOT NULL,
    notice_context text NULL,
    notice_regdate timestamp NULL,
    notice_category int4 NOT NULL DEFAULT 1,
    notice_private bool NOT NULL DEFAULT false,
    view_cnt int4 NULL DEFAULT 0,
    CONSTRAINT tb_notice_pkey PRIMARY KEY (notice_id)
);

------------------------- payment 테이블 -------------------------
DROP TABLE if exists tb_payment;
CREATE TABLE tb_payment (
    pay_no serial4 NOT NULL,
    pay_time timestamp NULL DEFAULT now(),
    pay_cardnum varchar(300) NOT NULL,
    pay_carddate int4 NOT NULL,
    pay_cvc int4 NOT NULL,
    pay_pwd int4 NOT NULL,
    pay_total numeric NOT NULL,
    prdt_id int4,
    user_no int4,
    delivery_reciever varchar(100) NOT NULL,
    delivery_phone varchar(100) NOT NULL,
    delivery_postcode varchar(100) NOT NULL,
    delivery_address varchar(500) NOT NULL,
    delivery_addressdetail varchar(500),
    delivery_memo varchar(1000),
    delivery_charge numeric,
    reward_user_cnt int4 NULL,
    reward_id int4 NULL,
    CONSTRAINT tb_payment_pkey PRIMARY KEY (pay_no)
);



------------------------- reply 테이블 -------------------------
DROP TABLE IF EXISTS tb_reply;
CREATE TABLE IF NOT EXISTS tb_reply(
    rno serial PRIMARY KEY,
    prdt_id int,
    chat_no int,
    chat_writer varchar(30) not null,
    chat_context varchar(3000),
    chat_date date default now(),
    user_no int,
    FOREIGN KEY(user_no) REFERENCES tb_user(user_no) ON DELETE cascade,
    FOREIGN KEY(prdt_id) REFERENCES tb_product(prdt_id) ON DELETE cascade,
    FOREIGN KEY(chat_no) REFERENCES tb_chat_service(chat_no) ON DELETE cascade
    );
    
------------------------- reward 테이블 -------------------------
DROP TABLE if exists tb_reward;
CREATE TABLE public.tb_reward (
    reward_id serial4 NOT NULL,
    reward_name varchar(100) NOT NULL,
    reward_desc text NOT NULL,
    reward_price numeric NULL DEFAULT 1000,
    reward_stock int4 NULL,
    reward_category int4 NOT NULL DEFAULT 0,
    prdt_id int4 NOT NULL,
    reward_cnt int4 NULL,
    user_no int4 NULL,
    CONSTRAINT tb_reward_pkey PRIMARY KEY (reward_id)
);

------------------------- setting 테이블 -------------------------
DROP TABLE if exists tb_setting;
CREATE TABLE tb_setting (
    setting_no serial4 NOT NULL,
    msg_agree bool NOT NULL DEFAULT false,
    update_agree bool NOT NULL DEFAULT false,
    favor_agree bool NOT NULL DEFAULT false,
    marketing_agree bool NOT NULL DEFAULT false,
    user_introduce text NULL,
    user_no int4 NOT NULL,
    CONSTRAINT tb_setting_pkey PRIMARY KEY (setting_no)
);

------------------------- update 테이블 -------------------------
DROP TABLE if exists tb_update;
CREATE TABLE tb_update (
    update_id serial4 NOT NULL,
    update_regdate timestamp NOT NULL DEFAULT now(),
    update_title varchar(30) NOT NULL,
    update_desc text NOT NULL,
    user_id varchar(100) NOT NULL,
    prdt_id int4 NOT NULL,
    CONSTRAINT tb_update_pkey PRIMARY KEY (update_id)
);


------------------------- bannerfile 테이블 -------------------------
drop table if exists tb_bannerfile;
CREATE TABLE tb_bannerfile
(
    bannerfile_id serial,
    bannerfile_file text,
    bannerfile_prdt_id int,
    bannerfile_regdate timestamp DEFAULT now() NOT NULL, 
    PRIMARY KEY(bannerfile_id)
);

---------------------------좋아요 테이블---------------------------

drop table if exists tb_like;
create table tb_like(
    like_id serial,
    like_regdate Date
    ,
    user_id varchar(100),
    prdt_id int
);

ALTER TABLE tb_like ADD CONSTRAINT tb_like_user_id_fkey FOREIGN KEY (user_id) REFERENCES tb_user(user_id) ON DELETE CASCADE;
ALTER TABLE tb_like ADD CONSTRAINT tb_like_prdt_id_fkey FOREIGN KEY (prdt_id) REFERENCES tb_product(prdt_id) ON DELETE CASCADE;
------------------------- FK 생성 -------------------------
ALTER TABLE tb_address ADD CONSTRAINT tb_address_user_no_fkey FOREIGN KEY (user_no) REFERENCES tb_user(user_no) ON DELETE CASCADE;
ALTER TABLE tb_agreement ADD CONSTRAINT tb_agreement_user_no_fkey FOREIGN KEY (user_no) REFERENCES tb_user(user_no) ON DELETE CASCADE;
ALTER TABLE tb_chat_service ADD CONSTRAINT prdt_id FOREIGN KEY (prdt_id) REFERENCES tb_product(prdt_id) ON DELETE CASCADE;
ALTER TABLE tb_file ADD CONSTRAINT prdt_id FOREIGN KEY (prdt_id) REFERENCES tb_product(prdt_id) ON DELETE CASCADE;
ALTER TABLE tb_inquiry_ans ADD CONSTRAINT tb_inquiry_ans_inquiry_no_fkey FOREIGN KEY (inquiry_no) REFERENCES tb_inquiry(inquiry_no) ON DELETE CASCADE;
ALTER TABLE tb_leave ADD CONSTRAINT tb_leave_user_no_fkey FOREIGN KEY (user_no) REFERENCES tb_user(user_no) ON DELETE CASCADE;
ALTER TABLE tb_mypage ADD CONSTRAINT prdt_id FOREIGN KEY (prdt_id) REFERENCES tb_product(prdt_id) ON DELETE CASCADE;
ALTER TABLE tb_mypage ADD CONSTRAINT tb_mypage_user_no_fkey FOREIGN KEY (user_no) REFERENCES tb_user(user_no) ON DELETE CASCADE;
ALTER TABLE tb_notice ADD CONSTRAINT user_id FOREIGN KEY (writer) REFERENCES tb_user(user_id) ON DELETE CASCADE;
ALTER TABLE tb_payment ADD CONSTRAINT prdt_id FOREIGN KEY (prdt_id) REFERENCES tb_product(prdt_id) ON DELETE CASCADE;
ALTER TABLE tb_payment ADD CONSTRAINT user_no FOREIGN KEY (user_no) REFERENCES tb_user(user_no) ON DELETE CASCADE;
ALTER TABLE tb_product ADD CONSTRAINT tb_product_img_no_fkey FOREIGN KEY (img_no) REFERENCES tb_image(img_no) ON DELETE CASCADE;
ALTER TABLE tb_product ADD CONSTRAINT tb_product_user_id_fkey FOREIGN KEY (user_id) REFERENCES tb_user(user_id) ON DELETE CASCADE;
ALTER TABLE tb_reward ADD CONSTRAINT prdt_id FOREIGN KEY (prdt_id) REFERENCES tb_product(prdt_id) ON DELETE CASCADE;
ALTER TABLE tb_reward ADD CONSTRAINT user_no FOREIGN KEY (user_no) REFERENCES public.tb_user(user_no) ON DELETE CASCADE;
ALTER TABLE tb_setting ADD CONSTRAINT tb_setting_user_no_fkey FOREIGN KEY (user_no) REFERENCES tb_user(user_no) ON DELETE CASCADE;
ALTER TABLE tb_update ADD CONSTRAINT prdt_id FOREIGN KEY (prdt_id) REFERENCES tb_product(prdt_id) ON DELETE CASCADE;
ALTER TABLE tb_update ADD CONSTRAINT user_id FOREIGN KEY (user_id) REFERENCES tb_user(user_id) ON DELETE CASCADE;
ALTER TABLE tb_file ADD CONSTRAINT user_no FOREIGN KEY(user_no) REFERENCES tb_user(user_no) ON DELETE CASCADE;



--시리얼 초기화 
-- truncate table tb_ restart identity;
-- 컬럼명 변경
--ALTER TABLE [테이블명] RENAME COLUMN [기존컬럼명] TO [변경할컬럼명];
--컬럼 삭제
--ALTER TABLE [테이블명] DROP COLUMN [기존컬럼명];
--컬럼 not null 제거
--ALTER TABLE [테이블명] ALTER COLUMN [기존컬럼명] DROP NOT NULL;
