@startuml

header purplaying sequence
footer Page %page% of %lastpage%


actor User
participant "Web Client" as C
participant "Purplaying Server" as S
database "Notice DB" as DB

title 공지사항

'공지사항 게시판 리스트
User -> C: 1.공지사항 게시판 리스트\nGET: [/purplaying/notice/list]

activate C
C -> S: static asset 요청\n(HTML/CSS 등)

activate S
S -> DB: 공지사항 list,\n총 게시글 수 요청
DB --> S :공지사항 list,\n총 게시글 수 응답
S --> C : HTML/CSS 응답
deactivate S

C --> User: 공지사항 게시판 리스트 출력
deactivate C

' 공지사항 게시판 읽기
User -> C: 2.공지사항 게시글 읽기\nGET: [/purplaying/notice/read]

activate C
C -> S: static asset 요청\n(HTML/CSS 등)

activate S
S -> DB: 공지사항 게시글 select,\n 조회수=+1 요청
DB --> S :공지사항 게시글 select,\n 조회수=+1 응답
S --> C : HTML/CSS 응답
deactivate S

C --> User: 공지사항 게시글 출력
deactivate C


newpage


'공지사항 작성
User -> C: 3.공지사항 게시글 작성버튼 클릭\nGET: [/purplaying/notice/write]

activate C
C -> S: 작성페이지 요청\n(HTML/CSS 등)
activate S
S -> S: 세션아이디와\n관리자아이디\n일치확인
S -->C: 작성페이지 응답\n(HTML/CSS 등)
deactivate S
C --> User: 공지사항 작성페이지 출력

User -> C: 공지사항 게시글 작성\nPOST: [/purplaying/notice/write/reg]
C -> S: 게시글 작성 요청 
S -> DB: 공지사항 게시글 DB insert 요청
DB --> S :공지사항 게시글 DB insert 응답
S --> C : 게시글 작성 응답

C --> User: 공지사항 게시글 작성완료,\n리스트로 이동
deactivate C


'공지사항 수정
User -> C: 4.공지사항 게시글 수정버튼 클릭\nGET: [/purplaying/notice/modify]

activate C
C -> S: 수정페이지 요청\n(HTML/CSS 등)
activate S
S -> S: 세션아이디와\n작성자아이디\n일치확인
S -->C: 수정페이지 응답\n(HTML/CSS 등)
deactivate S
C --> User: 공지사항 수정페이지 출력

User -> C: 공지사항 게시글 수정\nPOST: [/purplaying/notice/modify]
C -> S: 게시글 수정 요청 
S -> DB: 공지사항 게시글 DB update 요청
DB --> S :공지사항 게시글 DB update 응답
S --> C : 게시글 수정 응답

C --> User: 공지사항 게시글 수정완료,\n리스트로 이동
deactivate C


'공지사항 삭제
User -> C: 5.공지사항 게시글 삭제버튼 클릭\nPOST: [/purplaying/notice/remove]

activate C
C -> S: 게시글 삭제 요청
activate S
S -> S: 세션아이디와\n작성자아이디\n일치확인
S -> DB: 공지사항 게시글 DB delete 요청
DB --> S :공지사항 게시글 DB delete 응답
S -->C: 게시글 삭제 응답
deactivate S
C --> User: 공지사항 게시글 삭제 완료\n리스트로 이동
deactivate C
@enduml