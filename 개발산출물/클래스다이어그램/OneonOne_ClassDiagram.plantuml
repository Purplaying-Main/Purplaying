@startuml

!theme plain
top to bottom direction
skinparam linetype ortho

interface AnsDao << interface >> {
  + selectAnsData(Integer): AnsDto
  + deleteAns(Integer, String): int
  + insertAns(AnsDto): int
  + modifyAns(AnsDto): int
}
class AnsDaoimpl {
  + modifyAns(AnsDto): int
  + insertAns(AnsDto): int
  + deleteAns(Integer, String): int
  + selectAnsData(Integer): AnsDto
  + AnsDaoimpl(): 
  - namespace: String
  - session: SqlSession
}
class AnsDto {
  + equals(Object): boolean
  + getAdmin_id(): String
  + getAns_regdate(): Date
  + setAns_context(String): void
  + setAns_no(Integer): void
  + getInquiry_no(): Integer
  + setInquiry_no(Integer): void
  + setAns_regdate(Date): void
  + getAns_context(): String
  + setAns_state(Integer): void
  + setAdmin_id(String): void
  + hashCode(): int
  + toString(): String
  + getAns_state(): Integer
  + getAns_no(): Integer
  + AnsDto(Integer, Integer, String, Integer, String, Date): 
  + AnsDto(): 
  - inquiry_no: Integer
  - ans_no: Integer
  - ans_state: Integer
  - admin_id: String
  - ans_context: String
  - ans_regdate: Date
}
interface AnsService << interface >> {
  + selectAnsData(Integer): AnsDto
  + removeAns(Integer, Integer, String): int
  + modifyAns(AnsDto): int
  + insertAns(AnsDto): int
}
class AnsServiceImpl {
  + selectAnsData(Integer): AnsDto
  + insertAns(AnsDto): int
  + removeAns(Integer, Integer, String): int
  + modifyAns(AnsDto): int
  + AnsServiceImpl(OneononeDao, AnsDao): 
  ~ oneononeDao: OneononeDao
  ~ ansDao: AnsDao
}
class OneononeController {
  + modify(Integer, Integer, Integer, Model, HttpSession): String
  + remove(Integer, Integer, Integer, RedirectAttributes, HttpSession): String
  + modify(Integer, String, String, boolean, Integer, Integer, RedirectAttributes, Model, HttpSession): String
  + write(OneononeDto, RedirectAttributes, Model, HttpSession): String
  + list(Integer, Integer, Model, HttpServletRequest): String
  + writeans(AnsDto, Integer, HttpSession): void
  + write(Model, HttpSession, OneononeDto): String
  + modifyAns(AnsDto, Integer, Integer, String, String, Integer, Date, Integer, Integer, RedirectAttributes, Model, HttpSession): void
  - loginCheck(HttpServletRequest): boolean
  + read(Integer, boolean, Integer, Integer, Model, HttpSession): String
  + removeAns(Integer, Integer, String, Integer, Integer, RedirectAttributes, HttpSession): String
  + OneononeController(): 
  ~ oneononeService: OneononeService
  ~ ansService: AnsService
  ~ userDao: UserDao
}
interface OneononeDao << interface >> {
  + count(): int
  + updateAnsCnt(Integer, Integer): int
  + selectPage(Map): List<OneononeDto>
  + update(OneononeDto): int
  + select(Integer): OneononeDto
  + delete(Integer, String): int
  + insert(OneononeDto): int
}
class OneononeDaoImpl {
  + insert(OneononeDto): int
  + select(Integer): OneononeDto
  + selectPage(Map): List<OneononeDto>
  + updateAnsCnt(Integer, Integer): int
  + update(OneononeDto): int
  + delete(Integer, String): int
  + count(): int
  + OneononeDaoImpl(): 
  - session: SqlSession
  - namespace: String
}
class OneononeDto {
  + setInquiry_context(String): void
  + setInquiry_regdate(Date): void
  + getInquiry_no(): Integer
  + isInquiry_private(): boolean
  + toString(): String
  + getInquiry_context(): String
  + getUserDto(): UserDto
  + setInquiry_private(boolean): void
  + setInquiry_no(Integer): void
  + getInquiry_title(): String
  + getInquiry_state(): Integer
  + getInquiry_regdate(): Date
  + setInquiry_state(Integer): void
  + setAnsDto(AnsDto): void
  + getAnsDto(): AnsDto
  + setUserDto(UserDto): void
  + setWriter(String): void
  + getWriter(): String
  + hashCode(): int
  + setInquiry_title(String): void
  + equals(Object): boolean
  + OneononeDto(Integer, Integer, String, String, String, boolean, Date, AnsDto, UserDto): 
  + OneononeDto(): 
  - inquiry_state: Integer
  - writer: String
  - inquiry_title: String
  - inquiry_context: String
  - userDto: UserDto
  - inquiry_private: boolean
  - ansDto: AnsDto
  - inquiry_no: Integer
  - inquiry_regdate: Date
}
interface OneononeService << interface >> {
  + getCount(): int
  + write(OneononeDto): int
  + getPage(Map): List<OneononeDto>
  + remove(Integer, String): int
  + read(Integer): OneononeDto
  + modify(OneononeDto): int
}
class OneononeServiceImpl {
  + getCount(): int
  + getPage(Map): List<OneononeDto>
  + write(OneononeDto): int
  + modify(OneononeDto): int
  + remove(Integer, String): int
  + read(Integer): OneononeDto
  + OneononeServiceImpl(): 
  ~ oneononeDao: OneononeDao
}

AnsDaoimpl           -[#008200,dashed]-^  AnsDao              
AnsServiceImpl       -[#008200,dashed]-^  AnsService          
OneononeDaoImpl      -[#008200,dashed]-^  OneononeDao         
OneononeServiceImpl  -[#008200,dashed]-^  OneononeService     
@enduml
